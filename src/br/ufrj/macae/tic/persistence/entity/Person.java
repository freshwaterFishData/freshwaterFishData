package br.ufrj.macae.tic.persistence.entity;
// Generated 26/05/2017 12:44:14 by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name = "person", catalog = "peld")
public class Person implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 3877675858969163694L;
	
	private long id;
	private Organization organization;
	private Position position;
	private String personGivenName;
	private String personSurName;
	private String personEmail;
	private String personLattes;
	private String password;
	private String cpf;
	
	private List<Project> projects;
	private List<PersonProject> personProjects;
	private List<MeasurementPerson> measurementPersons;
	
	private List<Occurrence> identList;
	private List<Occurrence> recorderList;


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {		
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "personOrganizationId", nullable = false)
	public Organization getOrganization() {
		return this.organization;
	}

	public void setOrganization(Organization organization) {
		this.organization = organization;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "personPositionId", nullable = false)
	public Position getPosition() {
		return this.position;
	}

	public void setPosition(Position position) {
		this.position = position;
	}

	@Column(name = "personGivenName", nullable = false, length = 60)
	public String getPersonGivenName() {
		return this.personGivenName;
	}

	public void setPersonGivenName(String personGivenName) {
		this.personGivenName = personGivenName;
	}

	@Column(name = "personSurName", nullable = false, length = 45)
	public String getPersonSurName() {
		return this.personSurName;
	}

	public void setPersonSurName(String personSurName) {
		this.personSurName = personSurName;
	}

	@Column(name = "personEmail", length = 60)
	public String getPersonEmail() {
		return this.personEmail;
	}

	public void setPersonEmail(String personEmail) {
		this.personEmail = personEmail;
	}

	@Column(name = "personLattes", length = 60)
	public String getPersonLattes() {
		return this.personLattes;
	}

	public void setPersonLattes(String personLattes) {
		this.personLattes = personLattes;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<Project> getProjects() {
		return this.projects;
	}

	public void setProjects(List<Project> projects) {
		this.projects = projects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<PersonProject> getPersonProjects() {
		return this.personProjects;
	}

	public void setPersonProjects(List<PersonProject> personProjects) {
		this.personProjects = personProjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public List<MeasurementPerson> getMeasurementPersons() {
		return this.measurementPersons;
	}

	public void setMeasurementPersons(List<MeasurementPerson> measurementPersons) {
		this.measurementPersons = measurementPersons;
	}
	
	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	
	@Column(name = "cpf")
	public String getCpf() {
		return this.cpf;
	}

	public void setCpf(String cpf) {
		this.cpf = cpf;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "identifier")
	public List<Occurrence> getIdentifiers() {
		return this.identList;
	}

	public void setIdentifiers(List<Occurrence> ident) {
		this.identList = ident;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "recorder")
	public List<Occurrence> getRecordes() {
		return this.recorderList;
	}

	public void setRecordes(List<Occurrence> recorderList) {
		this.recorderList = recorderList;
	}
	

}
