package br.ufrj.macae.tic.persistence.entity;
// Generated 26/05/2017 12:44:14 by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.List;

import javax.inject.Inject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Occurrence generated by hbm2java
 */
@Entity
@Table(name = "occurrence", catalog = "peld")
public class Occurrence implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2684899331052050402L;
	
	private long id;
	
	//@Inject
	//private Disposition disposition;
	
	//@Inject
	//private Estableshiment estableshiment;
	
	@Inject
	private Event event;
	
	@Inject
	private Taxon taxon;
		
	
	private Integer individualCount;
	private Float organismQuantity;
	private String basisOfRecorded;
	private String occurrenceRemarks;
	
	@Inject
	private OrganismQuantityType organismQuantityTypeId;
	
	private Date identifiedDate;
	private String identificationRemarks;
	
	//private List<Person> personList;
	

	@Inject
	private Person identifier;
	
	@Inject
	private Recorder recorder;	
	
	
	private List<PersonOccurrence> personOccurrences;
	
	private List<Organism> organismList;
	
	public Occurrence() {

	}
	

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}
		
	/*
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dispositionId")
	public Disposition getDisposition() {
		return this.disposition;
	}

	public void setDisposition(Disposition disposition) {
		this.disposition = disposition;
	}
	*/
	
	/*
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "establishmentId")
	public Estableshiment getEstableshiment() {
		return this.estableshiment;
	}
	
	public void setEstableshiment(Estableshiment estableshiment) {
		this.estableshiment = estableshiment;
	}
	*/
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "recorderPersonId")
	public Recorder getRecorder() {
		return this.recorder;
	}
	
	public void setRecorder(Recorder recorder) {
		this.recorder = recorder;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "identifierPersonId")
	public Person getIdentifier() {
		return this.identifier;
	}
	
	public void setIdentifier(Person identifier) {
		this.identifier = identifier;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "eventId", nullable = false)
	public Event getEvent() {
		return this.event;
	}

	public void setEvent(Event event) {
		this.event = event;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "taxonId")
	public Taxon getTaxon() {
		return this.taxon;
	}

	public void setTaxon(Taxon taxon) {
		this.taxon = taxon;
	}

	@Column(name = "individualCount", precision = 12, scale = 0)
	public Integer getIndividualCount() {
		return this.individualCount;
	}

	public void setIndividualCount(Integer individualCount) {
		this.individualCount = individualCount;
	}

	@Column(name = "organismQuantity", precision = 12, scale = 0)
	public Float getOrganismQuantity() {
		return this.organismQuantity;
	}

	public void setOrganismQuantity(Float organismQuantity) {
		this.organismQuantity = organismQuantity;
	}

	@Column(name = "basisOfRecorded", nullable = false, length = 45)
	public String getBasisOfRecorded() {
		return this.basisOfRecorded;
	}

	public void setBasisOfRecorded(String basisOfRecorded) {
		this.basisOfRecorded = basisOfRecorded;
	}

	@Column(name = "occurrenceRemarks")
	public String getOccurrenceRemarks() {
		return this.occurrenceRemarks;
	}

	public void setOccurrenceRemarks(String occurrenceRemarks) {
		this.occurrenceRemarks = occurrenceRemarks;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "organismQuantityTypeId")
	public OrganismQuantityType getOrganismQuantityTypeId() {
		return this.organismQuantityTypeId;
	}

	public void setOrganismQuantityTypeId(OrganismQuantityType organismQuantityTypeId) {
		this.organismQuantityTypeId = organismQuantityTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "occurrence")
	public List<PersonOccurrence> getPersonOccurrences() {
		return this.personOccurrences;
	}

	public void setPersonOccurrences(List<PersonOccurrence> personOccurrences) {
		this.personOccurrences = personOccurrences;
	}

	public Date getIdentifiedDate() {
		return identifiedDate;
	}

	public void setIdentifiedDate(Date identifiedDate) {
		this.identifiedDate = identifiedDate;
	}

	public String getIdentificationRemarks() {
		return identificationRemarks;
	}

	public void setIdentificationRemarks(String identificationRemarks) {
		this.identificationRemarks = identificationRemarks;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "occurrence")
	public List<Organism> getOrganismList() {
		return organismList;
	}


	public void setOrganismList(List<Organism> organismList) {
		this.organismList = organismList;
	}
	
	
	/*

	@ManyToMany
    @JoinTable(name="person_occurrence", joinColumns=
    {@JoinColumn(name="personId")}, inverseJoinColumns=
      {@JoinColumn(name="occurrenceId")})
	public List<Person> getPerson() {
		return person;
	}

	public void setPerson(List<Person> person) {
		this.person = person;
	} */
	
	

}
