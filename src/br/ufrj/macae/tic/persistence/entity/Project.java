package br.ufrj.macae.tic.persistence.entity;
// Generated 26/05/2017 12:44:14 by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "project", catalog = "peld")
public class Project implements java.io.Serializable {

	private long id;
	private Organization organizationByExecuteInstituitionId;
	private Organization organizationByCollaboratingInstituitionId;
	private Organization organizationByFinancialInstituitionId;
	private Person person;
	private String projectTitle;
	private Date startDate;
	private Date endDate;
	
	private List<PersonProject> personProjects;


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "executeInstituitionId", nullable = false)
	public Organization getOrganizationByExecuteInstituitionId() {
		return this.organizationByExecuteInstituitionId;
	}

	public void setOrganizationByExecuteInstituitionId(Organization organizationByExecuteInstituitionId) {
		this.organizationByExecuteInstituitionId = organizationByExecuteInstituitionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "collaboratingInstituitionId")
	public Organization getOrganizationByCollaboratingInstituitionId() {
		return this.organizationByCollaboratingInstituitionId;
	}

	public void setOrganizationByCollaboratingInstituitionId(Organization organizationByCollaboratingInstituitionId) {
		this.organizationByCollaboratingInstituitionId = organizationByCollaboratingInstituitionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "financialInstituitionId")
	public Organization getOrganizationByFinancialInstituitionId() {
		return this.organizationByFinancialInstituitionId;
	}

	public void setOrganizationByFinancialInstituitionId(Organization organizationByFinancialInstituitionId) {
		this.organizationByFinancialInstituitionId = organizationByFinancialInstituitionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projectCoordinatorId", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@Column(name = "projectTitle", nullable = false)
	public String getProjectTitle() {
		return this.projectTitle;
	}

	public void setProjectTitle(String projectTitle) {
		this.projectTitle = projectTitle;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "startDate", length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "endDate", length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public List<PersonProject> getPersonProjects() {
		return this.personProjects;
	}

	public void setPersonProjects(List<PersonProject> personProjects) {
		this.personProjects = personProjects;
	}

}
