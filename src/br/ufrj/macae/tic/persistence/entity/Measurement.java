package br.ufrj.macae.tic.persistence.entity;
// Generated 26/05/2017 12:44:14 by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.inject.Inject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Measurement generated by hbm2java
 */
@Entity
@Table(name = "measurement", catalog = "peld")
public class Measurement implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4175600126817736983L;
	
	private long id;
	
	@Inject
	private MeasurementMethod measurementMethod;
	private String measurementType;
	private float measurementValue;
	private Date measurementDeterminedDate;
	private String measurementRemarks;
	private String measurementUnit;
	
	@Inject
	private Person measurer;
	
	private List<MeasurementPerson> measurementPersons;
	
	private Organism organism;

	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "measurementDeterminedById")
	public Person getMeasurer() {
		return this.measurer;
	}
	
	public void setMeasurer(Person measurer) {
		this.measurer = measurer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "measurementMethodId")
	public MeasurementMethod getMeasurementMethod() {
		return this.measurementMethod;
	}

	public void setMeasurementMethod(MeasurementMethod measurementMethod) {
		this.measurementMethod = measurementMethod;
	}

	@Column(name = "measurementType", nullable = false, length = 60)
	public String getMeasurementType() {
		return this.measurementType;
	}

	public void setMeasurementType(String measurementType) {
		this.measurementType = measurementType;
	}

	@Column(name = "measurementValue", nullable = false, precision = 12, scale = 0)
	public float getMeasurementValue() {
		return this.measurementValue;
	}

	public void setMeasurementValue(float measurementValue) {
		this.measurementValue = measurementValue;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "measurementDeterminedDate", length = 10)
	public Date getMeasurementDeterminedDate() {
		return this.measurementDeterminedDate;
	}

	public void setMeasurementDeterminedDate(Date measurementDeterminedDate) {
		this.measurementDeterminedDate = measurementDeterminedDate;
	}

	@Column(name = "measurementRemarks")
	public String getMeasurementRemarks() {
		return this.measurementRemarks;
	}

	public void setMeasurementRemarks(String measurementRemarks) {
		this.measurementRemarks = measurementRemarks;
	}
	
	@Column
	public String getMeasurementUnit() {
		return measurementUnit;
	}

	public void setMeasurementUnit(String measurementUnit) {
		this.measurementUnit = measurementUnit;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "measurement")
	public List<MeasurementPerson> getMeasurementPersons() {
		return this.measurementPersons;
	}

	public void setMeasurementPersons(List<MeasurementPerson> measurementPersons) {
		this.measurementPersons = measurementPersons;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "organismId")
	public Organism getOrganism() {
		return organism;
	}
	
	public void setOrganism(Organism organism) {
		this.organism = organism;
	}

}
