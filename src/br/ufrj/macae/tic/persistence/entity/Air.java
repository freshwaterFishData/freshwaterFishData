package br.ufrj.macae.tic.persistence.entity;
// Generated 26/05/2017 12:44:14 by Hibernate Tools 5.2.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Air generated by hbm2java
 */
@Entity
@Table(name = "air", catalog = "peld")
public class Air implements java.io.Serializable {

	private long id;
	private Rain rain;
	private Float airSpeed;
	private Float airDirection;
	private Float airGust;
	private Float radiationValue;
	private Float temperatureInstantaneous;
	private Float temperatureMaximum;
	private Float temperatureMinimum;
	private Float umidityInstantaneous;
	private Float umidityMaximum;
	private Float umidityMinimum;
	private Float dewPointInstantaneous;
	private Float dewPointMaximum;
	private Float dewPointMinimum;
	private Float pressureInstantaneous;
	private Float pressureMaximum;
	private Float pressureMinimum;

	public Air() {
	}

	public Air(Rain rain, Float airSpeed, Float airDirection, Float airGust, Float radiationValue,
			Float temperatureInstantaneous, Float temperatureMaximum, Float temperatureMinimum,
			Float umidityInstantaneous, Float umidityMaximum, Float umidityMinimum, Float dewPointInstantaneous,
			Float dewPointMaximum, Float dewPointMinimum, Float pressureInstantaneous, Float pressureMaximum,
			Float pressureMinimum) {
		
		this.rain = rain;
		this.airSpeed = airSpeed;
		this.airDirection = airDirection;
		this.airGust = airGust;
		this.radiationValue = radiationValue;
		this.temperatureInstantaneous = temperatureInstantaneous;
		this.temperatureMaximum = temperatureMaximum;
		this.temperatureMinimum = temperatureMinimum;
		this.umidityInstantaneous = umidityInstantaneous;
		this.umidityMaximum = umidityMaximum;
		this.umidityMinimum = umidityMinimum;
		this.dewPointInstantaneous = dewPointInstantaneous;
		this.dewPointMaximum = dewPointMaximum;
		this.dewPointMinimum = dewPointMinimum;
		this.pressureInstantaneous = pressureInstantaneous;
		this.pressureMaximum = pressureMaximum;
		this.pressureMinimum = pressureMinimum;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rainId")
	public Rain getRain() {
		return this.rain;
	}

	public void setRain(Rain rain) {
		this.rain = rain;
	}

	@Column(name = "airSpeed", precision = 12, scale = 0)
	public Float getAirSpeed() {
		return this.airSpeed;
	}

	public void setAirSpeed(Float airSpeed) {
		this.airSpeed = airSpeed;
	}

	@Column(name = "airDirection", precision = 12, scale = 0)
	public Float getAirDirection() {
		return this.airDirection;
	}

	public void setAirDirection(Float airDirection) {
		this.airDirection = airDirection;
	}

	@Column(name = "airGust", precision = 12, scale = 0)
	public Float getAirGust() {
		return this.airGust;
	}

	public void setAirGust(Float airGust) {
		this.airGust = airGust;
	}

	@Column(name = "radiationValue", precision = 12, scale = 0)
	public Float getRadiationValue() {
		return this.radiationValue;
	}

	public void setRadiationValue(Float radiationValue) {
		this.radiationValue = radiationValue;
	}

	@Column(name = "temperatureInstantaneous", precision = 12, scale = 0)
	public Float getTemperatureInstantaneous() {
		return this.temperatureInstantaneous;
	}

	public void setTemperatureInstantaneous(Float temperatureInstantaneous) {
		this.temperatureInstantaneous = temperatureInstantaneous;
	}

	@Column(name = "temperatureMaximum", precision = 12, scale = 0)
	public Float getTemperatureMaximum() {
		return this.temperatureMaximum;
	}

	public void setTemperatureMaximum(Float temperatureMaximum) {
		this.temperatureMaximum = temperatureMaximum;
	}

	@Column(name = "temperatureMinimum", precision = 12, scale = 0)
	public Float getTemperatureMinimum() {
		return this.temperatureMinimum;
	}

	public void setTemperatureMinimum(Float temperatureMinimum) {
		this.temperatureMinimum = temperatureMinimum;
	}

	@Column(name = "umidityInstantaneous", precision = 12, scale = 0)
	public Float getUmidityInstantaneous() {
		return this.umidityInstantaneous;
	}

	public void setUmidityInstantaneous(Float umidityInstantaneous) {
		this.umidityInstantaneous = umidityInstantaneous;
	}

	@Column(name = "umidityMaximum", precision = 12, scale = 0)
	public Float getUmidityMaximum() {
		return this.umidityMaximum;
	}

	public void setUmidityMaximum(Float umidityMaximum) {
		this.umidityMaximum = umidityMaximum;
	}

	@Column(name = "umidityMinimum", precision = 12, scale = 0)
	public Float getUmidityMinimum() {
		return this.umidityMinimum;
	}

	public void setUmidityMinimum(Float umidityMinimum) {
		this.umidityMinimum = umidityMinimum;
	}

	@Column(name = "dewPointInstantaneous", precision = 12, scale = 0)
	public Float getDewPointInstantaneous() {
		return this.dewPointInstantaneous;
	}

	public void setDewPointInstantaneous(Float dewPointInstantaneous) {
		this.dewPointInstantaneous = dewPointInstantaneous;
	}

	@Column(name = "dewPointMaximum", precision = 12, scale = 0)
	public Float getDewPointMaximum() {
		return this.dewPointMaximum;
	}

	public void setDewPointMaximum(Float dewPointMaximum) {
		this.dewPointMaximum = dewPointMaximum;
	}

	@Column(name = "dewPointMinimum", precision = 12, scale = 0)
	public Float getDewPointMinimum() {
		return this.dewPointMinimum;
	}

	public void setDewPointMinimum(Float dewPointMinimum) {
		this.dewPointMinimum = dewPointMinimum;
	}

	@Column(name = "pressureInstantaneous", precision = 12, scale = 0)
	public Float getPressureInstantaneous() {
		return this.pressureInstantaneous;
	}

	public void setPressureInstantaneous(Float pressureInstantaneous) {
		this.pressureInstantaneous = pressureInstantaneous;
	}

	@Column(name = "pressureMaximum", precision = 12, scale = 0)
	public Float getPressureMaximum() {
		return this.pressureMaximum;
	}

	public void setPressureMaximum(Float pressureMaximum) {
		this.pressureMaximum = pressureMaximum;
	}

	@Column(name = "pressureMinimum", precision = 12, scale = 0)
	public Float getPressureMinimum() {
		return this.pressureMinimum;
	}

	public void setPressureMinimum(Float pressureMinimum) {
		this.pressureMinimum = pressureMinimum;
	}

}
